//
// Generated by Bluespec Compiler (build 26e119fb)
//
// On Mon Sep 20 23:04:25 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTb(CLK,
	    RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule myCustom
  wire [31 : 0] myCustom$a, myCustom$b, myCustom$res;
  wire myCustom$EN;

  // submodule myCustom
  myCustomRTL myCustom(.clk(CLK),
		       .rst_b(RST_N),
		       .a(myCustom$a),
		       .b(myCustom$b),
		       .EN(myCustom$EN),
		       .res(myCustom$res));

  // submodule myCustom
  assign myCustom$a = 32'd12 ;
  assign myCustom$b = 32'd13 ;
  assign myCustom$EN = 1'd1 ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      $display("Result: %d", $signed(myCustom$res));
  end
  // synopsys translate_on
endmodule  // mkTb

