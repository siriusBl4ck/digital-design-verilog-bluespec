$date
	Mon Jun 14 13:37:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 8 ! res [7:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module w $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 1 ' m00 $end
$var wire 1 ( m01 $end
$var wire 1 ) m02 $end
$var wire 1 * m03 $end
$var wire 1 + m10 $end
$var wire 1 , m11 $end
$var wire 1 - m12 $end
$var wire 1 . m13 $end
$var wire 1 / m20 $end
$var wire 1 0 m21 $end
$var wire 1 1 m22 $end
$var wire 1 2 m23 $end
$var wire 1 3 m30 $end
$var wire 1 4 m31 $end
$var wire 1 5 m32 $end
$var wire 1 6 m33 $end
$var wire 1 7 s4_1 $end
$var wire 1 8 s3_2 $end
$var wire 1 9 s3_1 $end
$var wire 1 : s2_2 $end
$var wire 1 ; s2_1 $end
$var wire 1 < s1_2 $end
$var wire 1 = s1_1 $end
$var wire 1 > s0_2 $end
$var wire 1 ? s0_1 $end
$var wire 8 @ s [7:0] $end
$var wire 8 A res [7:0] $end
$var wire 1 " cout $end
$var wire 1 B c4_1 $end
$var wire 1 C c3_2 $end
$var wire 1 D c3_1 $end
$var wire 1 E c2_2 $end
$var wire 1 F c2_1 $end
$var wire 1 G c1_2 $end
$var wire 1 H c1_1 $end
$var wire 1 I c0_2 $end
$var wire 1 J c0_1 $end
$var wire 1 K c $end
$scope module Bit8Add $end
$var wire 8 L a [7:0] $end
$var wire 8 M b [7:0] $end
$var wire 18 N s4 [17:0] $end
$var wire 18 O s5 [17:0] $end
$var wire 18 P s3 [17:0] $end
$var wire 18 Q s2 [17:0] $end
$var wire 18 R s1 [17:0] $end
$var wire 8 S s [7:0] $end
$var wire 1 K cout $end
$scope begin fa[0] $end
$scope module f $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V cin $end
$var wire 1 W s $end
$upscope $end
$upscope $end
$scope begin fa[1] $end
$scope module f $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z cin $end
$var wire 1 [ s $end
$upscope $end
$upscope $end
$scope begin fa[2] $end
$scope module f $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ cin $end
$var wire 1 _ s $end
$upscope $end
$upscope $end
$scope begin fa[3] $end
$scope module f $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b cin $end
$var wire 1 c s $end
$upscope $end
$upscope $end
$scope begin fa[4] $end
$scope module f $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 f cin $end
$var wire 1 g s $end
$upscope $end
$upscope $end
$scope begin fa[5] $end
$scope module f $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j cin $end
$var wire 1 k s $end
$upscope $end
$upscope $end
$scope begin fa[6] $end
$scope module f $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n cin $end
$var wire 1 o s $end
$upscope $end
$upscope $end
$scope begin fa[7] $end
$scope module f $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r cin $end
$var wire 1 s s $end
$upscope $end
$upscope $end
$scope module op1_1 $end
$var wire 2 t a [1:0] $end
$var wire 2 u b [1:0] $end
$var wire 2 v c [1:0] $end
$upscope $end
$scope module op2_1 $end
$var wire 2 w a [1:0] $end
$var wire 2 x b [1:0] $end
$var wire 2 y c [1:0] $end
$upscope $end
$scope module op2_2 $end
$var wire 2 z a [1:0] $end
$var wire 2 { b [1:0] $end
$var wire 2 | c [1:0] $end
$upscope $end
$scope module op3_1 $end
$var wire 2 } a [1:0] $end
$var wire 2 ~ b [1:0] $end
$var wire 2 !" c [1:0] $end
$upscope $end
$scope module op3_2 $end
$var wire 2 "" a [1:0] $end
$var wire 2 #" b [1:0] $end
$var wire 2 $" c [1:0] $end
$upscope $end
$scope module op4_1 $end
$var wire 2 %" a [1:0] $end
$var wire 2 &" b [1:0] $end
$var wire 2 '" c [1:0] $end
$upscope $end
$scope module op4_2 $end
$var wire 2 (" a [1:0] $end
$var wire 2 )" b [1:0] $end
$var wire 2 *" c [1:0] $end
$upscope $end
$scope module op4_3 $end
$var wire 2 +" a [1:0] $end
$var wire 2 ," b [1:0] $end
$var wire 2 -" c [1:0] $end
$upscope $end
$scope module op5_1 $end
$var wire 2 ." a [1:0] $end
$var wire 2 /" b [1:0] $end
$var wire 2 0" c [1:0] $end
$upscope $end
$scope module op5_2 $end
$var wire 2 1" a [1:0] $end
$var wire 2 2" b [1:0] $end
$var wire 2 3" c [1:0] $end
$upscope $end
$scope module op5_3 $end
$var wire 2 4" a [1:0] $end
$var wire 2 5" b [1:0] $end
$var wire 2 6" c [1:0] $end
$upscope $end
$scope module op6_1 $end
$var wire 2 7" a [1:0] $end
$var wire 2 8" b [1:0] $end
$var wire 2 9" c [1:0] $end
$upscope $end
$scope module op6_2 $end
$var wire 2 :" a [1:0] $end
$var wire 2 ;" b [1:0] $end
$var wire 2 <" c [1:0] $end
$upscope $end
$scope module op6_3 $end
$var wire 2 =" a [1:0] $end
$var wire 2 >" b [1:0] $end
$var wire 2 ?" c [1:0] $end
$upscope $end
$scope module op7_1 $end
$var wire 2 @" a [1:0] $end
$var wire 2 A" b [1:0] $end
$var wire 2 B" c [1:0] $end
$upscope $end
$scope module op7_2 $end
$var wire 2 C" a [1:0] $end
$var wire 2 D" b [1:0] $end
$var wire 2 E" c [1:0] $end
$upscope $end
$scope module op7_3 $end
$var wire 2 F" a [1:0] $end
$var wire 2 G" b [1:0] $end
$var wire 2 H" c [1:0] $end
$upscope $end
$scope module op8_1 $end
$var wire 2 I" a [1:0] $end
$var wire 2 J" b [1:0] $end
$var wire 2 K" c [1:0] $end
$upscope $end
$scope module op8_2 $end
$var wire 2 L" a [1:0] $end
$var wire 2 M" b [1:0] $end
$var wire 2 N" c [1:0] $end
$upscope $end
$scope module op8_3 $end
$var wire 2 O" a [1:0] $end
$var wire 2 P" b [1:0] $end
$var wire 2 Q" c [1:0] $end
$upscope $end
$scope module op8_4 $end
$var wire 2 R" a [1:0] $end
$var wire 2 S" b [1:0] $end
$var wire 2 T" c [1:0] $end
$upscope $end
$upscope $end
$scope module fa1_1 $end
$var wire 1 ) a $end
$var wire 1 , b $end
$var wire 1 / cin $end
$var wire 1 H cout $end
$var wire 1 = s $end
$upscope $end
$scope module fa2_1 $end
$var wire 1 * a $end
$var wire 1 - b $end
$var wire 1 0 cin $end
$var wire 1 F cout $end
$var wire 1 ; s $end
$upscope $end
$scope module fa3_1 $end
$var wire 1 . a $end
$var wire 1 1 b $end
$var wire 1 4 cin $end
$var wire 1 D cout $end
$var wire 1 9 s $end
$upscope $end
$scope module ha0_1 $end
$var wire 1 ( a $end
$var wire 1 + b $end
$var wire 1 J cout $end
$var wire 1 ? s $end
$upscope $end
$scope module ha0_2 $end
$var wire 1 ; a $end
$var wire 1 H b $end
$var wire 1 I cout $end
$var wire 1 > s $end
$upscope $end
$scope module ha1_2 $end
$var wire 1 9 a $end
$var wire 1 F b $end
$var wire 1 G cout $end
$var wire 1 < s $end
$upscope $end
$scope module ha2_2 $end
$var wire 1 D b $end
$var wire 1 E cout $end
$var wire 1 : s $end
$var wire 1 7 a $end
$upscope $end
$scope module ha3_2 $end
$var wire 1 6 a $end
$var wire 1 C cout $end
$var wire 1 8 s $end
$var wire 1 B b $end
$upscope $end
$scope module ha4_1 $end
$var wire 1 2 a $end
$var wire 1 5 b $end
$var wire 1 B cout $end
$var wire 1 7 s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b11 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b11 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b11 %"
b11 $"
b11 #"
b0 ""
b11 !"
b11 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
1c
1b
0a
0`
0_
0^
1]
1\
0[
0Z
0Y
0X
0W
0V
0U
0T
b1000 S
b11000000 R
b11000000 Q
b11000000 P
bz0000000011000000 O
b11000000 N
b100 M
b100 L
zK
0J
1I
1H
0G
0F
0E
0D
0C
0B
b100011 A
b1000 @
1?
0>
0=
1<
1;
0:
19
08
07
06
05
04
03
02
11
00
1/
0.
1-
0,
1+
0*
1)
0(
1'
b111 &
b101 %
b111 $
b101 #
0"
b100011 !
$end
#100
