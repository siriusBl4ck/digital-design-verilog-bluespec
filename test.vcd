$date
	Thu Apr 29 08:41:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 8 ! s [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$scope module CarryLookahead $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 18 ' s4 [17:0] $end
$var wire 18 ( s5 [17:0] $end
$var wire 18 ) s3 [17:0] $end
$var wire 18 * s2 [17:0] $end
$var wire 18 + s1 [17:0] $end
$var wire 8 , s [7:0] $end
$var wire 1 " cout $end
$scope begin fa[0] $end
$scope module f $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 s $end
$upscope $end
$upscope $end
$scope begin fa[1] $end
$scope module f $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 s $end
$upscope $end
$upscope $end
$scope begin fa[2] $end
$scope module f $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$scope begin fa[3] $end
$scope module f $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < s $end
$upscope $end
$upscope $end
$scope begin fa[4] $end
$scope module f $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 1 @ s $end
$upscope $end
$upscope $end
$scope begin fa[5] $end
$scope module f $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D s $end
$upscope $end
$upscope $end
$scope begin fa[6] $end
$scope module f $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cin $end
$var wire 1 H s $end
$upscope $end
$upscope $end
$scope begin fa[7] $end
$scope module f $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 1 L s $end
$upscope $end
$upscope $end
$scope module op1_1 $end
$var wire 2 M a [1:0] $end
$var wire 2 N b [1:0] $end
$var wire 2 O c [1:0] $end
$upscope $end
$scope module op2_1 $end
$var wire 2 P a [1:0] $end
$var wire 2 Q b [1:0] $end
$var wire 2 R c [1:0] $end
$upscope $end
$scope module op2_2 $end
$var wire 2 S a [1:0] $end
$var wire 2 T b [1:0] $end
$var wire 2 U c [1:0] $end
$upscope $end
$scope module op3_1 $end
$var wire 2 V a [1:0] $end
$var wire 2 W b [1:0] $end
$var wire 2 X c [1:0] $end
$upscope $end
$scope module op3_2 $end
$var wire 2 Y a [1:0] $end
$var wire 2 Z b [1:0] $end
$var wire 2 [ c [1:0] $end
$upscope $end
$scope module op4_1 $end
$var wire 2 \ a [1:0] $end
$var wire 2 ] b [1:0] $end
$var wire 2 ^ c [1:0] $end
$upscope $end
$scope module op4_2 $end
$var wire 2 _ a [1:0] $end
$var wire 2 ` b [1:0] $end
$var wire 2 a c [1:0] $end
$upscope $end
$scope module op4_3 $end
$var wire 2 b a [1:0] $end
$var wire 2 c b [1:0] $end
$var wire 2 d c [1:0] $end
$upscope $end
$scope module op5_1 $end
$var wire 2 e a [1:0] $end
$var wire 2 f b [1:0] $end
$var wire 2 g c [1:0] $end
$upscope $end
$scope module op5_2 $end
$var wire 2 h a [1:0] $end
$var wire 2 i b [1:0] $end
$var wire 2 j c [1:0] $end
$upscope $end
$scope module op5_3 $end
$var wire 2 k a [1:0] $end
$var wire 2 l b [1:0] $end
$var wire 2 m c [1:0] $end
$upscope $end
$scope module op6_1 $end
$var wire 2 n a [1:0] $end
$var wire 2 o b [1:0] $end
$var wire 2 p c [1:0] $end
$upscope $end
$scope module op6_2 $end
$var wire 2 q a [1:0] $end
$var wire 2 r b [1:0] $end
$var wire 2 s c [1:0] $end
$upscope $end
$scope module op6_3 $end
$var wire 2 t a [1:0] $end
$var wire 2 u b [1:0] $end
$var wire 2 v c [1:0] $end
$upscope $end
$scope module op7_1 $end
$var wire 2 w a [1:0] $end
$var wire 2 x b [1:0] $end
$var wire 2 y c [1:0] $end
$upscope $end
$scope module op7_2 $end
$var wire 2 z a [1:0] $end
$var wire 2 { b [1:0] $end
$var wire 2 | c [1:0] $end
$upscope $end
$scope module op7_3 $end
$var wire 2 } a [1:0] $end
$var wire 2 ~ b [1:0] $end
$var wire 2 !" c [1:0] $end
$upscope $end
$scope module op8_1 $end
$var wire 2 "" a [1:0] $end
$var wire 2 #" b [1:0] $end
$var wire 2 $" c [1:0] $end
$upscope $end
$scope module op8_2 $end
$var wire 2 %" a [1:0] $end
$var wire 2 &" b [1:0] $end
$var wire 2 '" c [1:0] $end
$upscope $end
$scope module op8_3 $end
$var wire 2 (" a [1:0] $end
$var wire 2 )" b [1:0] $end
$var wire 2 *" c [1:0] $end
$upscope $end
$scope module op8_4 $end
$var wire 2 +" a [1:0] $end
$var wire 2 ," b [1:0] $end
$var wire 2 -" c [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b1 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b1 z
b0 y
b0 x
b1 w
b0 v
b0 u
b11 t
b0 s
b1 r
b0 q
b1 p
b1 o
b1 n
b0 m
b0 l
b0 k
b0 j
b1 i
b0 h
b1 g
b1 f
b1 e
b0 d
b0 c
b0 b
b0 a
b0 `
b11 _
b0 ^
b1 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b11 V
b11 U
b11 T
b0 S
b11 R
b11 Q
b0 P
b0 O
b0 N
b0 M
0L
0K
0J
0I
0H
0G
0F
0E
1D
0C
0B
1A
1@
0?
0>
1=
1<
0;
1:
09
18
17
06
05
04
03
12
11
00
0/
0.
0-
b111100 ,
b1010100110000 +
b1010000110000 *
b110000 )
bz0000000000110000 (
b110000 '
b1010 &
b110010 %
b1010 $
b110010 #
z"
b111100 !
$end
#100
